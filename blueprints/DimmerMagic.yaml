blueprint:
  name: DimmerMagic
  description: >
    Binding a Hue Dimmer to a Area
  source_url: https://raw.githubusercontent.com/Gydesen/HomeAssistant/main/blueprints/DimmerMagic.yaml
  author: Gydesen
  domain: automation
  input:
    base_input:
      name: Base Inputs
      icon: mdi:cog
      input:
        dimmer_action_entity:
          name: Hue Dimmer action entity
          default: []
          selector:
            entity:
              multiple: false
              filter:
                - domain: event
        light_entity:
          name: Entity ID of the lightsource
          default: []
          selector:
            entity:
              multiple: false
              filter:
                - domain: light
        on_light_level:
          name: On light level
          default: 80
          selector:
            number:
              min: 10.0
              max: 100.0
              unit_of_measurement: percent
              step: 1.0
              mode: slider
    dimming_input:
      name: Dimming Inputs
      icon: mdi:cog
      collapsed: true
      input:
        delay_ms:
          name: Delay In milliseconds
          default: 300
          selector:
            number:
              min: 10.0
              max: 1000.0
              unit_of_measurement: milliseconds
              step: 10.0
              mode: slider
        transition_time:
          name: Light transition time in continuous loop
          default: 0.3
          selector:
            number:
              min: 0.01
              max: 1.0
              unit_of_measurement: seconds
              step: 0.01
              mode: slider
        continuous_step:
          name: Percentage step in continuous loop
          default: 10
          selector:
            number:
              min: 1
              max: 100
              unit_of_measurement: "%"
              step: 1
              mode: slider
        step_step:
          name: Percentage step in single clicks
          default: 5
          selector:
            number:
              min: 1
              max: 100
              unit_of_measurement: "%"
              step: 1
              mode: slider
    buttons_input:
      name: Buttons Inputs
      icon: mdi:cog
      collapsed: true
      input:
        use_on:
          name: Use Toggle
          default: true
          selector:
            boolean:
        use_up:
          name: Use Up
          default: true
          selector:
            boolean:
        use_down:
          name: Use Down
          default: true
          selector:
            boolean:
        use_off:
          name: Use Off / Hue button
          default: true
          selector:
            boolean:
mode: restart
variables:
  var_light_entity: !input light_entity
  var_dimmer_event: !input dimmer_action_entity
  var_continuous_step: !input continuous_step
  var_step_step: !input step_step
  var_use_on: !input use_on
  var_use_up: !input use_up
  var_use_down: !input use_down
  var_use_off: !input use_off

triggers:
  - trigger: state
    entity_id:
      - !input dimmer_action_entity
    attribute: event_type
    to: press
    id: press
  - trigger: state
    entity_id:
      - !input dimmer_action_entity
    attribute: event_type
    to: press_release
    id: press_release
  - trigger: state
    entity_id:
      - !input dimmer_action_entity
    attribute: event_type
    to: hold
    id: hold
  - trigger: state
    entity_id:
      - !input dimmer_action_entity
    attribute: event_type
    to: hold_release
    id: hold_release
actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - press
        sequence:
          - choose:
              - conditions:
                  - alias: "Press on AND var_use_on is selected"
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "on"
                  - condition: template
                    value_template: "{{ var_use_on }}"
                sequence: []

              - conditions:
                  - alias: "Press up AND use_up is selected"
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: up
                  - condition: template
                    value_template: "{{ var_use_up }}"
                sequence: []

              - conditions:
                  - alias: "Press down AND use_down is selected"
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: down
                  - condition: template
                    value_template: "{{ var_use_down }}"
                sequence: []

              - conditions:
                  - alias: "Press off AND use_off is selected"
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "off"
                  - condition: template
                    value_template: "{{ var_use_off }}"
                sequence: []

      - conditions:
          - condition: trigger
            id:
              - press_release
        sequence:
          - choose:
              - conditions:
                  - alias: "Press release on AND use_on is selected"
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "on"
                  - condition: template
                    value_template: "{{ var_use_on }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: !input light_entity
                            state: "off"
                        sequence:
                          - action: light.turn_on
                            metadata: {}
                            #data:
                            #  brightness_pct: !input on_light_level
                            target:
                              entity_id: !input light_entity
                      - conditions:
                          - condition: state
                            entity_id: !input light_entity
                            state: "on"
                        sequence:
                          - action: light.turn_off
                            metadata: {}
                            data: {}
                            target:
                              entity_id: !input light_entity

              - conditions:
                  - alias: Press released Up AND var_use_up is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "up"
                  - condition: template
                    value_template: "{{ var_use_up }}"
                sequence:
                  - action: light.turn_on
                    metadata: {}
                    data:
                      brightness_step_pct: !input step_step
                    target:
                      entity_id: !input light_entity

              - conditions:
                  - alias: Press released Down AND var_use_down is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "down"
                  - condition: template
                    value_template: "{{ var_use_down }}"
                sequence:
                  - if:
                    - condition: template
                      value_template: >
                        {{ state_attr(var_light_entity, "brightness") > 13 }}
                    then:
                    - action: light.turn_on
                      metadata: {}
                      data:
                        brightness_step_pct: "{{ var_step_step * -1}}"
                      target:
                        entity_id: !input light_entity
                    else:
                    - action: light.turn_on
                      metadata: {}
                      data:
                        brightness: 1
                      target:
                        entity_id: !input light_entity

              - conditions:
                  - alias: Press released Off AND var_use_off is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "off"
                  - condition: template
                    value_template: "{{ var_use_off }}"
                sequence: []

      - conditions:
          - condition: trigger
            id:
              - hold
        sequence:
          - choose:
              - conditions:
                  - alias: Hold On AND use_on is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "on"
                  - condition: template
                    value_template: "{{ var_use_on }}"
                sequence: []

              - conditions:
                  - alias: Hold Up AND use_up is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "up"
                  - condition: template
                    value_template: "{{ var_use_up }}"
                sequence:
                  - repeat:
                      sequence:
                        - action: light.turn_on
                          metadata: {}
                          data:
                            brightness_step_pct: !input continuous_step
                            transition: !input transition_time
                          target:
                            entity_id: !input light_entity
                        - delay:
                            hours: 0
                            minutes: 0
                            seconds: 0
                            milliseconds: !input delay_ms
                      while:
                        - condition: trigger
                          id:
                            - hold

              - conditions:
                  - alias: Hold Down AND use_down is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "down"
                  - condition: template
                    value_template: "{{ var_use_down }}"
                sequence:
                  - repeat:
                      sequence:
                        - action: light.turn_on
                          metadata: {}
                          data:
                            brightness_step_pct: "{{ var_continuous_step * -1 }}"
                            transition: !input transition_time
                          target:
                            entity_id: !input light_entity
                        - delay:
                            hours: 0
                            minutes: 0
                            seconds: 0
                            milliseconds: !input delay_ms
                      while:
                      - condition: trigger
                        id: hold
                      - condition: template
                        value_template: >
                          {{ state_attr(var_light_entity, "brightness") > 26 }}

              - conditions:
                  - alias: Hold Off AND use_off is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "off"
                  - condition: template
                    value_template: "{{ var_use_off }}"
                sequence: []

      - conditions:
          - condition: trigger
            id:
              - hold_release
        sequence:
          - choose:
              - conditions:
                  - alias: Hold Release On AND use_on is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "on"
                  - condition: template
                    value_template: "{{ var_use_on }}"
                sequence: []

              - conditions:
                  - alias: Hold Release Up AND use_up is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "up"
                  - condition: template
                    value_template: "{{ var_use_up }}"
                sequence: []

              - conditions:
                  - alias: Hold Release Down and use_down is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "down"
                  - condition: template
                    value_template: "{{ var_use_down }}"
                sequence: []

              - conditions:
                  - alias: Hold Release Off and use_off is on
                    condition: state
                    entity_id: !input dimmer_action_entity
                    attribute: button
                    state: "off"
                  - condition: template
                    value_template: "{{ var_use_off }}"
                sequence: []

